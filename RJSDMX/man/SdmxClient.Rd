% Generated by roxygen2 (4.0.2): do not edit by hand
\name{getFlows}
\alias{addProvider}
\alias{getCodes}
\alias{getDSDIdentifier}
\alias{getDimensions}
\alias{getFlows}
\alias{getProviders}
\alias{getSDMX}
\alias{getTimeSeries}
\alias{sdmxHelp}
\title{SdmxClient}
\usage{
getFlows(provider, pattern = "")

getDSDIdentifier(provider, dataflow)

addProvider(name, agency, endpoint, needsCredentials = F)

getDimensions(provider, dataflow)

getTimeSeries(provider, dataflow, start = "", end = "")

getSDMX(provider, dataflow, start = "", end = "")

getProviders()

getCodes(provider, dataflow, dimension)

sdmxHelp()
}
\arguments{
\item{provider}{the name of the provider}

\item{pattern}{the pattern to match against the dataflow id or description. If a pattern is not provided, all dataflows are returned.}

\item{dataflow}{the identifier of the dataflow}

\item{name}{the name of the provider}

\item{agency}{the agency identifier of the provider}

\item{endpoint}{the URL where the provider resides}

\item{needsCredentials}{set this to TRUE if the user needs to authenticate to query the provider}

\item{start}{the start time - optional}

\item{end}{the end time - optional}

\item{dimension}{the identifier of the dimension}
}
\description{
\code{getFlows}: extract the list of DataFlows of a provider. This function is used to query the list of dataflows of the provider. A matching pattern can be provided, if needed.

\code{getDSDIdentifier}: extract the KeyFamily identifier of a DataFlow. This function is used to retrieve the name of the keyfamily of the input dataflow.

\code{addProvider}: Configure a new data provider (only SDMX 2.1 REST providers are supported). This function can be used to configure a new (SDMX 2.1 compliant, REST based) data provider.

\code{getDimensions}: extract the dimensions of a DataFlow. This function is used to retrieve the list of dimensions of the input dataflow

\code{getTimeSeries}: extract a list of time series. This function is used to extract a list of time series identified by the parameters provided in input.
getTimeSeries(provider, dataflow, start, end)

\code{getSDMX}: extract a list of time series. This function is exactly the same as \code{getTimeSeries}.

\code{getProviders}: extract the list of available Data Providers. This function is used to query the list of data providers.

\code{getCodes}: extract the codes of a dimension. This function is used to retrieve the list of codes available for the input dimension and flow.

\code{sdmxHelp}: open a helper graphical application. This function opens a small sdmx metadata browser that can be helpful when building queries.
}
\details{
getFlows(provider, pattern)

getDSDIdentifier(provider, dataflow)

addProvider(name, agency, endpoint, needsCredentials)

getDimensions(provider, dataflow)

getSDMX(provider, dataflow, start, end)

getProviders()

getCodes(provider, dataflow, dimension)

sdmxHelp()
}
\examples{
## get all flows from ECB
flows = getFlows('ECB')
## get all flows that contain the 'EXR
flows = getFlows('ECB','*EXR*')
id = getDSDIdentifier('ECB','EXR')
addProvider('pname', 'pagency', 'pendpoint', F)
dims = getDimensions('ECB','EXR')
## get single time series: EXR.A.USD.EUR.SP00.A (alternatively: EXR/A+M.USD.EUR.SP00.A)
my_ts=getTimeSeries('ECB','EXR.A.USD.EUR.SP00.A')
## get monthly and annual frequency: 'EXR.A|M.USD.EUR.SP00.A' (alternatively: EXR/A+M.USD.EUR.SP00.A)
my_ts=getTimeSeries('ECB','EXR.A|M.USD.EUR.SP00.A')
## get all available frequencies: 'EXR.*.USD.EUR.SP00.A' (alternatively: EXR/.USD.EUR.SP00.A)
my_ts=getTimeSeries('ECB','EXR.*.USD.EUR.SP00.A')
## get single time series: EXR.A.USD.EUR.SP00.A (alternatively: EXR/A+M.USD.EUR.SP00.A)
my_ts=getSDMX('ECB','EXR.A.USD.EUR.SP00.A')
## get monthly and annual frequency: 'EXR.A|M.USD.EUR.SP00.A' (alternatively: EXR/A+M.USD.EUR.SP00.A)
my_ts=getSDMX('ECB','EXR.A|M.USD.EUR.SP00.A')
## get all available frequencies: 'EXR.*.USD.EUR.SP00.A' (alternatively: EXR/.USD.EUR.SP00.A)
my_ts=getSDMX('ECB','EXR.*.USD.EUR.SP00.A')
getProviders()
dims=getCodes('ECB', 'EXR', 'FREQ')
sdmxHelp()
}
\author{
Attilio Mattiocco \email{Attilio.Mattiocco@bancaditalia.it}, Diana Nicoletti
}
\keyword{rJava}

